////
// Variables and Mixins for generating flexbox declarations
// @group Atoms/Layout
////

// ============================================================================
// Variables
// ============================================================================

// ============================================================================
// Mixins
// ============================================================================

////
// Mixin:
// @param
// @returns
////

// @mixin flexColumn {
//   display: flex;
//   flex-direction: column;
// }
// @mixin flexRow {
//   display: flex;
//   flex-direction: row;
// }
//
// // Function: fb
// // @param {String} $key - one of the $FONT_SIZE_SCALE map keys
// // @returns - a value from the $FONT_SIZE_SCALE
// @mixin fb($direction: 'row', $align: null, $justify: null) {
//   @if $direction {
//     flex-direction: $direction;
//   } @else {
//     @error 'Direction is required in fb mixin`';
//   }
//   @if $align {
//     align-items: $align;
//   }
//   @if $justify {
//     justify-content: $justify;
//   }
//   display: flex;
// }
// This is a mixin, which fixes IE11's vertical alignment issue, when using `min-height`.
// See https://connect.microsoft.com/IE/feedback/details/816293/
// @credit https://github.com/angular/material/src/core/style/mixins.scss
// @mixin ie11MinHeightFlexbug($min-height) {
//   &::before {
//     display: inline-block;
//     visibility: hidden;
//     min-height: $min-height;
//     content: '';
//   }
// }

/*
  FLEXBOX
  Media Query Extensions:
   -ns = not-small
   -m  = medium
   -l  = large
*/

// .flex { display: flex; }
// .inline-flex { display: inline-flex; }
//
// /* 1. Fix for Chrome 44 bug.
//  * https://code.google.com/p/chromium/issues/detail?id=506893 */
// .flex-auto {
//   flex: 1 1 auto;
//   min-width: 0; /* 1 */
//   min-height: 0; /* 1 */
// }
//
// .flex-none { flex: none; }
//
// .flex-column  { flex-direction: column; }
// .flex-row     { flex-direction: row; }
// .flex-wrap    { flex-wrap: wrap; }
// .flex-nowrap    { flex-wrap: nowrap; }
// .flex-wrap-reverse    { flex-wrap: wrap-reverse; }
// .flex-column-reverse  { flex-direction: column-reverse; }
// .flex-row-reverse     { flex-direction: row-reverse; }
//
// .items-start    { align-items: flex-start; }
// .items-end      { align-items: flex-end; }
// .items-center   { align-items: center; }
// .items-baseline { align-items: baseline; }
// .items-stretch  { align-items: stretch; }
//
// .self-start    { align-self: flex-start; }
// .self-end      { align-self: flex-end; }
// .self-center   { align-self: center; }
// .self-baseline { align-self: baseline; }
// .self-stretch  { align-self: stretch; }
//
// .justify-start   { justify-content: flex-start; }
// .justify-end     { justify-content: flex-end; }
// .justify-center  { justify-content: center; }
// .justify-between { justify-content: space-between; }
// .justify-around  { justify-content: space-around; }
//
// .content-start   { align-content: flex-start; }
// .content-end     { align-content: flex-end; }
// .content-center  { align-content: center; }
// .content-between { align-content: space-between; }
// .content-around  { align-content: space-around; }
// .content-stretch { align-content: stretch; }
//
// .order-0 { order: 0; }
// .order-1 { order: 1; }
// .order-2 { order: 2; }
// .order-3 { order: 3; }
// .order-4 { order: 4; }
// .order-5 { order: 5; }
// .order-6 { order: 6; }
// .order-7 { order: 7; }
// .order-8 { order: 8; }
// .order-last { order: 99999; }
//
// .flex-grow-0 { flex-grow: 0; }
// .flex-grow-1 { flex-grow: 1; }
//
// .flex-shrink-0 { flex-shrink: 0; }
// .flex-shrink-1 { flex-shrink: 1; }
