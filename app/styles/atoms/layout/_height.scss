////
// Variables and Mixins for generating height declarations
// @group Atoms/Layout
////

// ============================================================================
// Variables
// ============================================================================
$DEFAULT_OPTS: map-merge(
  (
    'default': inherit,
    'auto': auto,
    '25%': 25%,
    '50%': 50%,
    '75%': 75%,
    '100%': 100%,
    '25vh': 25vh,
    '50vh': 50vh,
    '75vh': 75vh,
    '100vh': 100vh
  ),
  $DEFAULT_SIZES
);

// merge in the default options
$height-opts: map-merge($DEFAULT_OPTS, $height-opts);

// ============================================================================
// Mixins
// ============================================================================

////
// Mixin: height
// @param {String or Number} $key - a key in $height-opts
// @returns a height declaration
////
@mixin height($key: 'default') {
  height: if(map-has-key($height-opts, $key), get($height-opts, $key, 'height mixin'), $key);
}

////
// Mixin: max-height
// @param {String or Number} $key - a key in $height-opts
// @returns a max-height declaration
////
@mixin max-height($key: 'default') {
  max-height: if(map-has-key($height-opts, $key), get($height-opts, $key, 'height mixin'), $key);
}

////
// Mixin: min-height
// @param {String or Number} $key - a key in $height-opts
// @returns a min-height declaration
////
@mixin min-height($key: 'default') {
  min-height: if(map-has-key($height-opts, $key), get($height-opts, $key, 'height mixin'), $key);
}
